#!/usr/bin/env python
# coding: utf-8
from pylab import *
import time
import sys
#TIME-FREQUENCY DOMAINS
#
##########################################################
N=4096                      #FFT points
r=0.25                      #roll-off
#
D=64                        #sampling/symbol interval rate
S=N/D                       #bit stream lenght
k=arange(S)
x=arange(N)
WN=zeros(N)
SN=zeros(N)
RW=zeros(N)
DS=zeros(N)
DR=zeros(N)
RR=zeros(N)
##########################################################
#                 INPUT SIGNAL 
##########################################################
#  1. Random signal I. White noise
WN=0.5*randn(size(x))
#  2. Deterministic, periodic sinosoidal waweform
SW=sin(x*2*D*pi/N)
#  3. Deterministic, periodic sequence of rectangular pulses
RW=sign(sin(x*2*D*pi/(N+1)))
#  4. Deterministic, nonperiodic sinosoidal waweform
DS=exp(-0.005*x)*sin(x*2*D*pi/N)
#  5. Deterministic, damped sequence of rectangular pulses
DR=exp(-0.005*x)*sign(sin((x-1)*2*D*pi/(N+1)))
#  6. Random signal II.   Bit string generated by random sequence
ni=sign(randn(size(k)))
k=0;                      #resampled signal for FFT
for w in range(N-D+1,D):
    RR[w:w+D]=ni[k]
    k=k+1

##########################################################
MM=DR;     #ITT válaszd ki a bemenőjelet!
##########################################################
#                SPECTRUMs
##########################################################
ww=range(N)
#
X=fft(MM,N)
XX=20*log10(abs(sys.float_info.min+X/N))
#
subplots_adjust(hspace=.4) #See tight space
f2=subplot(2,1,2);  plot(ww,XX, "--")
axis([1,N/8,-100,0])
xlabel ('f [Hz]')
ylabel ('absY($j\omega$)  [dB]')
title('Frequency domain')
grid(True)
#
f1=subplot(2,1,1);  plot(ww,MM, "--")
axis([1,N/4,-2,2])
xlabel ('t  [x0.25 ms]')
ylabel ('u(t)  [V]')
title('Time domain')
grid(True)
#title('Time and frequency domain')

draw()
time.sleep(8)
